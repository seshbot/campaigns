@model campaigns.Models.CharacterSheet
@using campaigns.Helpers

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CharacterSheet</h4>
        <hr />
        @Html.ValidationSummary(true, "", Html.CustomValidationAttributes())

        <div class="form-group">
            @Html.LabelFor(model => model.Name, Html.CustomLabelAttributes())
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, Html.CustomEditorAttributes())
                @Html.ValidationMessageFor(model => model.Name, "", Html.CustomValidationAttributes())
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, Html.CustomLabelAttributes())
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, Html.CustomEditorAttributes())
                @Html.ValidationMessageFor(model => model.Description, "", Html.CustomValidationAttributes())
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Experience, Html.CustomLabelAttributes())
            <div class="col-md-10">
                @Html.EditorFor(model => model.Experience, Html.CustomEditorAttributes())
                @Html.ValidationMessageFor(model => model.Experience, "", Html.CustomValidationAttributes())
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DerivedStatistics.Level, Html.CustomLabelAttributes())
            <div class="col-md-10">
                @Html.EditorFor(model => model.DerivedStatistics.Level, Html.CustomEditorAttributes())
                @Html.ValidationMessageFor(model => model.DerivedStatistics.Level, "", Html.CustomValidationAttributes())
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DerivedStatistics.ProficiencyBonus, Html.CustomLabelAttributes())
            <div class="col-md-10">
                @Html.EditorFor(model => model.DerivedStatistics.ProficiencyBonus, Html.CustomEditorAttributes())
                @Html.ValidationMessageFor(model => model.DerivedStatistics.ProficiencyBonus, "", Html.CustomValidationAttributes())
            </div>
        </div>

        @for (var i = 0; i < Model.AbilityAllocations.Count(); i++)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.AbilityAllocations[i].Points, Model.AbilityAllocations[i].Ability.ShortName, Html.CustomLabelAttributes())
                <div class="col-md-10">
                    @Html.Hidden("AbilityAllocations[" + i + "].AbilityId", Model.AbilityAllocations[i].Ability.Id)
                    @Html.EditorFor(m => m.AbilityAllocations[i].Points, Html.CustomEditorAttributes())
                    @Html.ValidationMessageFor(m => m.AbilityAllocations[i].Points, "", Html.CustomValidationAttributes())
                </div>
            </div>
        }

        @for (var i = 0; i < Model.SkillAllocations.Count(); i++)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.SkillAllocations[i].Points, Model.SkillAllocations[i].Skill.Name, Html.CustomLabelAttributes())
                <div class="col-md-10">
                    @Html.Hidden("SkillAllocations[" + i + "].SkillId", Model.SkillAllocations[i].Skill.Id)
                    @Html.EditorFor(m => m.SkillAllocations[i].Points, Html.CustomEditorAttributes())
                    @Html.ValidationMessageFor(m => m.SkillAllocations[i].Points, "", Html.CustomValidationAttributes())
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/angular.js")

    
}
