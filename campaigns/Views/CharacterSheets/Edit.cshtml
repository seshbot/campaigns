@model campaigns.Models.CharacterSheet
@using campaigns.Helpers

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CharacterSheet</h4>
        <hr />
        @Html.ValidationSummary(true, "", Html.CustomValidationAttributes())
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, Html.CustomLabelAttributes())
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, Html.CustomEditorAttributes())
                @Html.ValidationMessageFor(model => model.Name, "", Html.CustomValidationAttributes())
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, Html.CustomLabelAttributes())
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, Html.CustomEditorAttributes())
                @Html.ValidationMessageFor(model => model.Description, "", Html.CustomValidationAttributes())
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Experience, Html.CustomLabelAttributes())
            <div class="col-md-10">
                @Html.EditorFor(model => model.Experience, Html.CustomEditorAttributes())
                @Html.ValidationMessageFor(model => model.Experience, "", Html.CustomValidationAttributes())
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level, Html.CustomLabelAttributes())
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level, Html.CustomEditorAttributes())
                @Html.ValidationMessageFor(model => model.Level, "", Html.CustomValidationAttributes())
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProficiencyBonus, Html.CustomLabelAttributes())
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProficiencyBonus, Html.CustomEditorAttributes())
                @Html.ValidationMessageFor(model => model.ProficiencyBonus, "", Html.CustomValidationAttributes())
            </div>
        </div>

        @for (var i = 0; i < Model.Abilities.Count(); i++)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.Abilities[i].Points, Model.Abilities[i].Ability.ShortName, Html.CustomLabelAttributes())
                <div class="col-md-10">
                    @Html.Hidden("Abilities[" + i + "].AbilityId", Model.Abilities[i].Ability.Id)
                    @Html.EditorFor(m => m.Abilities[i].Points, Html.CustomEditorAttributes())
                    @Html.ValidationMessageFor(m => m.Abilities[i].Points, "", Html.CustomValidationAttributes())
                </div>
            </div>
        }

        @for (var i = 0; i < Model.Skills.Count(); i++)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.Skills[i].Points, Model.Skills[i].Skill.Name, Html.CustomLabelAttributes())
                <div class="col-md-10">
                    @Html.Hidden("Skills[" + i + "].SkillId", Model.Skills[i].Skill.Id)
                    @Html.EditorFor(m => m.Skills[i].Points, Html.CustomEditorAttributes())
                    @Html.ValidationMessageFor(m => m.Skills[i].Points, "", Html.CustomValidationAttributes())
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
